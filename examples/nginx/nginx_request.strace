7968  execve("/home/preston/nginx-1.10.3/objs/nginx", ["/home/preston/nginx-1.10.3/objs/nginx", "-c", "/home/preston/nginx/nginx.conf", "-p", "/home/preston/nginx"], ["XDG_SESSION_ID=1", "SHELL=/bin/bash", "TERM=screen", "SSH_CLIENT=172.16.48.1 50526 22", "SSH_TTY=/dev/pts/3", "USER=preston", "LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:", "TMUX=/tmp/tmux-1000/default,21349,0", "PATH=/home/preston/bin:/home/preston/.local/bin:/home/preston/bin:/home/preston/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin", "MAIL=/var/mail/preston", "EVENT_NOEPOLL=1", "PWD=/home/preston/rrapper/test", "LANG=en_US.UTF-8", "TMUX_PANE=%8", "HOME=/home/preston", "SHLVL=2", "LOGNAME=preston", "SSH_CONNECTION=172.16.48.1 50526 172.16.48.195 22", "LC_CTYPE=en_US.UTF-8", "LESSOPEN=| /usr/bin/lesspipe %s", "XDG_RUNTIME_DIR=/run/user/1000", "LESSCLOSE=/usr/bin/lesspipe %s %s", "_=/usr/bin/strace", "OLDPWD=/home/preston/rrapper"]) = 0
7968  brk(NULL)                         = 0x811c000
7968  access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
7968  mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd5000
7968  access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
7968  open("/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
7968  fstat64(3, {st_dev=makedev(8, 1), st_ino=790014, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=176, st_size=87112, st_atime=2018/04/09-10:32:18.466832185, st_mtime=2018/04/09-10:32:18.430831460, st_ctime=2018/04/09-10:32:18.438831621}) = 0
7968  mmap2(NULL, 87112, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7fbf000
7968  close(3)                          = 0
7968  access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
7968  open("/lib/i386-linux-gnu/libdl.so.2", O_RDONLY|O_CLOEXEC) = 3
7968  read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\n\0\0004\0\0\0T1\0\0\0\0\0\0004\0 \0\7\0(\0\36\0\35\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\324$\0\0\324$\0\0\5\0\0\0\0\20\0\0\1\0\0\0\260.\0\0\260>\0\0\260>\0\0\210\1\0\0\270\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\304.\0\0\304>\0\0\304>\0\0\10\1\0\0\10\1\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0D\0\0\0D\0\0\0\4\0\0\0\4\0\0\0P\345td\34\32\0\0\34\32\0\0\34\32\0\0\334\0\0\0\334\0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\260.\0\0\260>\0\0\260>\0\0P\1\0\0P\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\304\247-WV\275\245\365\34:|\223\241*\306\371+=\222\234\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0 \0\0\0\26\0\0\0\32\0\0\0\4\0\0\0\7\0\0\0\230\0\21\0\0B\0\0\202\0`\10\223(\10\336\32\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\33\0\0\0\0\0\0\0\34\0\0\0\35\0\0\0\0\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\"\0\0\0#\0\0\0\0\0\0\0\0\0\0\0$\0\0\0&\0\0\0'\0\0\0\0\0\0\0)\0\0\0\221!\374\370\225\263_\31\5\350\7\371\6\2\4\371\7\2\4\371\301S\200\30`\242\222\6\257\304M\17\325=l\366\327=l\366\352\26\251\30\371\31sB", 512) = 512
7968  fstat64(3, {st_dev=makedev(8, 1), st_ino=696130, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=13828, st_atime=2018/04/08-17:32:42.083947469, st_mtime=2018/01/14-19:20:06, st_ctime=2018/01/17-08:09:25.891171423}) = 0
7968  mmap2(NULL, 16488, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7fba000
7968  mmap2(0xb7fbd000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0xb7fbd000
7968  close(3)                          = 0
7968  access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
7968  open("/lib/i386-linux-gnu/libpthread.so.0", O_RDONLY|O_CLOEXEC) = 3
7968  read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\260O\0\0004\0\0\0@\10\2\0\0\0\0\0004\0 \0\t\0(\0*\0'\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0 \1\0\0 \1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\224,\1\0\224,\1\0\224,\1\0\23\0\0\0\23\0\0\0\4\0\0\0\4\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0004\204\1\0004\204\1\0\5\0\0\0\0\20\0\0\1\0\0\0\254\215\1\0\254\235\1\0\254\235\1\0\270\3\0\0\264$\0\0\6\0\0\0\0\20\0\0\2\0\0\0\230\216\1\0\230\236\1\0\230\236\1\0\30\1\0\0\30\1\0\0\6\0\0\0\4\0\0\0\4\0\0\0T\1\0\0T\1\0\0T\1\0\0D\0\0\0D\0\0\0\4\0\0\0\4\0\0\0P\345td\250,\1\0\250,\1\0\250,\1\0$\t\0\0$\t\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\254\215\1\0\254\235\1\0\254\235\1\0T\2\0\0T\2\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\22x\332Y\354\300y\35\316\\D\330\270uj\4\200\276:[\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0 \0\0\0\4\2\0\0X\0\0\0@\0\0\0\v\0\0\0\31!\2\221\1\n\20\"@H \331\3\0I4\200\0\0@\0 \200\200\221Q`\300@\22\213\0020D\0\0\20\1\0\n\0\1\r\0\204\n\360\1X\260\r\240\200\10 $\204\20B\242)m\10G\234V\20\0\224 \204$H\0X(\1\222\34\301B\240\220\22\10\f \2", 512) = 512
7968  fstat64(3, {st_dev=makedev(8, 1), st_ino=696127, st_mode=S_IFREG|0755, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=264, st_size=134864, st_atime=2018/04/08-17:32:42.083947469, st_mtime=2018/01/14-19:20:10, st_ctime=2018/01/17-08:09:25.891171423}) = 0
7968  mmap2(NULL, 115296, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7f9d000
7968  mmap2(0xb7fb6000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18000) = 0xb7fb6000
7968  mmap2(0xb7fb8000, 4704, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7fb8000
7968  close(3)                          = 0
7968  access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
7968  open("/lib/i386-linux-gnu/libcrypt.so.1", O_RDONLY|O_CLOEXEC) = 3
7968  read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\10\0\0004\0\0\0l\221\0\0\0\0\0\0004\0 \0\7\0(\0\36\0\35\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0$\201\0\0$\201\0\0\5\0\0\0\0\20\0\0\1\0\0\0\310\216\0\0\310\236\0\0\310\236\0\0\204\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\324\216\0\0\324\236\0\0\324\236\0\0\10\1\0\0\10\1\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0D\0\0\0D\0\0\0\4\0\0\0\4\0\0\0P\345td s\0\0 s\0\0 s\0\0L\1\0\0L\1\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\310\216\0\0\310\236\0\0\310\236\0\0008\1\0\0008\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\207\376ki\274\367\344\246\327\350k\231o\305{\327\323\32\325D\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0 \0\0\0\17\0\0\0\30\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\32\0\0\0\0\0\0\0\33\0\0\0\34\0\0\0\0\0\0\0\35\0\0\0\0\0\0\0\36\0\0\0\37\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0\0\0\0\0\0\0\0\0 \0\0\0i\0\0\0\0\0\0\0\0\0\0\0\26\0\0\0\244\0\0\0", 512) = 512
7968  fstat64(3, {st_dev=makedev(8, 1), st_ino=696146, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=80, st_size=38428, st_atime=2018/04/08-17:32:43.519947440, st_mtime=2018/01/14-19:20:06, st_ctime=2018/01/17-08:09:25.891171423}) = 0
7968  mmap2(NULL, 201020, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7f6b000
7968  mmap2(0xb7f74000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x8000) = 0xb7f74000
7968  mmap2(0xb7f76000, 155964, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7f76000
7968  close(3)                          = 0
7968  access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
7968  open("/lib/i386-linux-gnu/libpcre.so.3", O_RDONLY|O_CLOEXEC) = 3
7968  read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\220\16\0\0004\0\0\0 1\7\0\0\0\0\0004\0 \0\7\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\374$\7\0\374$\7\0\5\0\0\0\0\20\0\0\1\0\0\0\324-\7\0\324=\7\0\324=\7\0H\2\0\0\344\2\0\0\6\0\0\0\0\20\0\0\2\0\0\0h.\7\0h>\7\0h>\7\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0$\0\0\0$\0\0\0\4\0\0\0\4\0\0\0P\345td``\6\0``\6\0``\6\0\324\4\0\0\324\4\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\324-\7\0\324=\7\0\324=\7\0,\2\0\0,\2\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\244\342\276\260\374\242\341\250\374\246\243\271\32\237A\t+\231\220\252%\0\0\0\33\0\0\0\10\0\0\0\10\0\0\0\2\0\t\200\302\245\30 (\0\0\1\304\320\201\32\0\202XH\32 E\17\200\10\2\1\242>\234\2\33\0\0\0\35\0\0\0\0\0\0\0\0\0\0\0\37\0\0\0 \0\0\0\0\0\0\0!\0\0\0\0\0\0\0\"\0\0\0\0\0\0\0$\0\0\0%\0\0\0'\0\0\0\0\0\0\0\0\0\0\0)\0\0\0+\0\0\0-\0\0\0.\0\0\0\0\0\0\0\0\0\0\0/\0\0\0001\0\0\0002\0\0\0004\0\0\0007\0\0\0\0\0\0\0\0\0\0\0008\0\0\0:\0\0\0<\0\0\0\0\0\0\0=\0\0\0\0\0\0\0>\0\0\0?\0\0\0&\206t\200", 512) = 512
7968  fstat64(3, {st_dev=makedev(8, 1), st_ino=657024, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=928, st_size=472368, st_atime=2018/04/08-17:32:42.083947469, st_mtime=2016/03/24-21:15:25, st_ctime=2017/09/14-13:17:10.051774076}) = 0
7968  mmap2(NULL, 475320, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7ef6000
7968  mmap2(0xb7f69000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x72000) = 0xb7f69000
7968  close(3)                          = 0
7968  access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
7968  open("/lib/i386-linux-gnu/libssl.so.1.0.0", O_RDONLY|O_CLOEXEC) = 3
7968  read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0 \312\0\0004\0\0\0\274\204\6\0\0\0\0\0004\0 \0\7\0(\0\35\0\34\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0008.\6\0008.\6\0\5\0\0\0\0\20\0\0\1\0\0\0\364/\6\0\364?\6\0\364?\6\0\214S\0\0$T\0\0\6\0\0\0\0\20\0\0\2\0\0\0\244N\6\0\244^\6\0\244^\6\0\0\1\0\0\0\1\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0$\0\0\0$\0\0\0\4\0\0\0\4\0\0\0P\345tdx\313\4\0x\313\4\0x\313\4\0<\25\0\0<\25\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\364/\6\0\364?\6\0\364?\6\0\f \0\0\f \0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0|:\325\3601\366\336\202b\311\306C\27\303%\335\366\374\330k\7\1\0\0\214\1\0\0@\0\0\0\v\0\0\0\30\f\0062\33m5\3'@\2\4\206\0\200\31D\1\21\10\"\26$\10H\241\370\32\10(\0\314#\0\0\200\10\0\0\1\t\20\22\"\10+\200!\231 &\"\4\2\1L1\2\232J\\H\177\201X\0\3010#\0\313\1\0(\222\10\24HP\2102\200\4\24b>B\6\0\2300@\201u\212\212\262\21\0\"b\240\0\4\10b\4\211\10\211@\1\304\0\0031D\2@\24\241D\24$a\300\204(\0\0\2\200\20\224\204@\23\232DP\200\16\0\214\342\4\212$\20\201\23\"\0`\0B&<\341\32\10\4 \tC\200m\336\3\0\2203\0\0\17\0\f\0\317\"\264@d@", 512) = 512
7968  fstat64(3, {st_dev=makedev(8, 1), st_ino=692945, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=840, st_size=428356, st_atime=2018/04/08-17:32:42.851947453, st_mtime=2018/03/27-12:00:08, st_ctime=2018/04/02-12:48:22.619021951}) = 0
7968  mmap2(NULL, 431128, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7e8c000
7968  mmap2(0xb7eef000, 28672, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x62000) = 0xb7eef000
7968  close(3)                          = 0
7968  access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
7968  open("/lib/i386-linux-gnu/libcrypto.so.1.0.0", O_RDONLY|O_CLOEXEC) = 3
7968  read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\0\230\3\0004\0\0\0\234\205\36\0\0\0\0\0004\0 \0\7\0(\0\35\0\34\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\374\27\35\0\374\27\35\0\5\0\0\0\0\20\0\0\1\0\0\0\324'\35\0\3247\35\0\3247\35\0\215\\\1\0\244\216\1\0\6\0\0\0\0\20\0\0\2\0\0\0\250\32\36\0\250*\36\0\250*\36\0\0\1\0\0\0\1\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0$\0\0\0$\0\0\0\4\0\0\0\4\0\0\0P\345td@\250\25\0@\250\25\0@\250\25\0\314\221\0\0\314\221\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\324'\35\0\3247\35\0\3247\35\0,\370\0\0,\370\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\267\224$\201O\7\241\347\217N6D\324\332\21-p\277\317\336\5\10\0\0o\0\0\0\0\4\0\0\17\0\0\0\1\4\31\205D\0\200\200`\300\4\0\1\f\4\0\201\0\0\0\30\206\4\210\20\0a\300\0\0\0\0\5\204\3\0\200$`\21F\t\fH\0\3\200\24\0\0\212\4\211\3A\204\10\0\4\20\0\2a9\10\0\0\200\0\0\0\0\f\20t\205\262\fD\0\0\22\0\5\t@\300@\10\205\f\200\4P\20@ \1\0@(\f@\v\10T\211\2\0\f\1\0@\0\0\200\21S,\234\205\0 \f\10\350\2N\0\0\0\0\4@\0\0\0\6\240\2\0\0\30\r\5\0f\0b\260\2\2\0\220\0\0\0\0042H\0\0\0\0\340\0\0\1\1#\4\210\4\0\10\2\10\0\0\200\2 E\202", 512) = 512
7968  fstat64(3, {st_dev=makedev(8, 1), st_ino=692944, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=3912, st_size=2001444, st_atime=2018/04/08-17:32:42.851947453, st_mtime=2018/03/27-12:00:08, st_ctime=2018/04/02-12:48:22.619021951}) = 0
7968  mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7e8b000
7968  mmap2(NULL, 2016888, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7c9e000
7968  mprotect(0xb7e70000, 4096, PROT_NONE) = 0
7968  mmap2(0xb7e71000, 94208, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1d2000) = 0xb7e71000
7968  mmap2(0xb7e88000, 9848, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7e88000
7968  close(3)                          = 0
7968  access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
7968  open("/lib/i386-linux-gnu/libz.so.1", O_RDONLY|O_CLOEXEC) = 3
7968  read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0P\26\0\0004\0\0\0\314\221\1\0\0\0\0\0004\0 \0\7\0(\0\35\0\34\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0004\202\1\0004\202\1\0\5\0\0\0\0\20\0\0\1\0\0\0004\216\1\0004\236\1\0004\236\1\0\\\2\0\0`\2\0\0\6\0\0\0\0\20\0\0\2\0\0\0\350\216\1\0\350\236\1\0\350\236\1\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0$\0\0\0$\0\0\0\4\0\0\0\4\0\0\0P\345td$T\1\0$T\1\0$T\1\0\214\3\0\0\214\3\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td4\216\1\0004\236\1\0004\236\1\0\314\1\0\0\314\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\30%5\177\24\336\205$n\245a\260\266k\247\355-\177\247\vC\0\0\0\27\0\0\0\20\0\0\0\t\0\0\0\10\3l\24\f\3\0\24!\0\vI\232\2\236\20\234\t\4LQ\4\0\200<\0B\242\220\27\213\3\2kp\363E\302\20B\0l\0\0\250\241\220\237@\224\21E%g\306\241P\0\16\20\6\200 \20\27\0\0\0\32\0\0\0\33\0\0\0\35\0\0\0!\0\0\0\"\0\0\0$\0\0\0%\0\0\0\0\0\0\0&\0\0\0'\0\0\0*\0\0\0-\0\0\0.\0\0\0\0\0\0\0000\0\0\0\0\0\0\0001\0\0\0003\0\0\0004\0\0\0006\0\0\0008\0\0\0\0\0\0\0009\0\0\0:\0\0\0;\0\0\0\0\0\0\0<\0\0\0\0\0\0\0>\0\0\0", 512) = 512
7968  fstat64(3, {st_dev=makedev(8, 1), st_ino=657086, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=208, st_size=104020, st_atime=2018/04/08-17:32:42.843947454, st_mtime=2017/03/03-09:52:13, st_ctime=2017/09/14-13:17:10.143772220}) = 0
7968  mmap2(NULL, 106644, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7c83000
7968  mmap2(0xb7c9c000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18000) = 0xb7c9c000
7968  close(3)                          = 0
7968  access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
7968  open("/lib/i386-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
7968  read(3, "\177ELF\1\1\1\3\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\320\207\1\0004\0\0\0\2047\33\0\0\0\0\0004\0 \0\n\0(\0F\0E\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0@\1\0\0@\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0xP\26\0xP\26\0xP\26\0\23\0\0\0\23\0\0\0\4\0\0\0\4\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\\\361\32\0\\\361\32\0\5\0\0\0\0\20\0\0\1\0\0\0<\362\32\0<\2\33\0<\2\33\0\230,\0\0\340W\0\0\6\0\0\0\0\20\0\0\2\0\0\0\260\r\33\0\260\35\33\0\260\35\33\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0t\1\0\0t\1\0\0t\1\0\0D\0\0\0D\0\0\0\4\0\0\0\4\0\0\0\7\0\0\0<\362\32\0<\2\33\0<\2\33\0\10\0\0\0H\0\0\0\4\0\0\0\4\0\0\0P\345td\214P\26\0\214P\26\0\214P\26\0\234a\0\0\234a\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td<\362\32\0<\2\33\0<\2\33\0\304\35\0\0\304\35\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\335Q\222\247i\343>\326\312h\246\253W@\377\236\216\306x\247\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0 \0\0\0\363\3\0\0\n\0\0\0\0\2\0\0\16\0\0\0\2400\20D\200 \2\1\214\3\346\220AE\210\0\204\0\10\0E\204\0`\300\200\0\f\212\f\0\0010\0\10@2\10\252\0\210H6l\240\0368\0&\204\200\216\4\10B$", 512) = 512
7968  fstat64(3, {st_dev=makedev(8, 1), st_ino=696128, st_mode=S_IFREG|0755, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=3496, st_size=1786484, st_atime=2018/04/08-17:32:42.079947469, st_mtime=2018/01/14-19:20:06, st_ctime=2018/01/17-08:09:25.891171423}) = 0
7968  mmap2(NULL, 1792540, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7acd000
7968  mmap2(0xb7c7d000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1af000) = 0xb7c7d000
7968  mmap2(0xb7c80000, 10780, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7c80000
7968  close(3)                          = 0
7968  mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7acc000
7968  mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7acb000
7968  set_thread_area({entry_number:-1, base_addr:0xb7acb700, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0 (entry_number:6)
7968  mprotect(0xb7c7d000, 8192, PROT_READ) = 0
7968  mprotect(0xb7c9c000, 4096, PROT_READ) = 0
7968  mprotect(0xb7fbd000, 4096, PROT_READ) = 0
7968  mprotect(0xb7e71000, 65536, PROT_READ) = 0
7968  mprotect(0xb7eef000, 12288, PROT_READ) = 0
7968  mprotect(0xb7fb6000, 4096, PROT_READ) = 0
7968  mprotect(0xb7f69000, 4096, PROT_READ) = 0
7968  mprotect(0xb7f74000, 4096, PROT_READ) = 0
7968  mprotect(0x80f6000, 4096, PROT_READ) = 0
7968  mprotect(0xb7ffe000, 4096, PROT_READ) = 0
7968  munmap(0xb7fbf000, 87112)         = 0
7968  set_tid_address(0xb7acb768)       = 7968
7968  set_robust_list(0xb7acb770, 12)   = 0
7968  rt_sigaction(SIGRTMIN, {0xb7fa19c0, [], SA_SIGINFO}, NULL, 8) = 0
7968  rt_sigaction(SIGRT_1, {0xb7fa1a40, [], SA_RESTART|SA_SIGINFO}, NULL, 8) = 0
7968  rt_sigprocmask(SIG_UNBLOCK, [RTMIN RT_1], NULL, 8) = 0
7968  ugetrlimit(RLIMIT_STACK, {rlim_cur=8192*1024, rlim_max=RLIM_INFINITY}) = 0
7968  uname({sysname="Linux", nodename="xub32", release="4.13.0-38-generic", version="#43~16.04.1-Ubuntu SMP Wed Mar 14 17:46:42 UTC 2018", machine="i686", domainname="(none)"}) = 0
7968  brk(NULL)                         = 0x811c000
7968  brk(0x813d000)                    = 0x813d000
7968  open("/etc/localtime", O_RDONLY|O_CLOEXEC) = 3
7968  fstat64(3, {st_dev=makedev(8, 1), st_ino=937360, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2845, st_atime=2018/04/08-17:32:42.687947457, st_mtime=2017/11/09-16:00:05, st_ctime=2017/11/16-12:19:50.704847991}) = 0
7968  fstat64(3, {st_dev=makedev(8, 1), st_ino=937360, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2845, st_atime=2018/04/08-17:32:42.687947457, st_mtime=2017/11/09-16:00:05, st_ctime=2017/11/16-12:19:50.704847991}) = 0
7968  read(3, "TZif2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\5\0\0\0\5\0\0\0\0\0\0\0\272\0\0\0\5\0\0\0\24\200\0\0\0\236\246H\240\237\273\25\220\240\206*\240\241\232\367\220\313\211\32\240\322#\364p\322a&\20\326\376t\\\330\200\255\220\332\376\303\220\333\300\220\20\334\336\245\220\335\251\254\220\336\276\207\220\337\211\216\220\340\236i\220\341ip\220\342~K\220\343IR\220\344^-\220\345)4\220\346GJ\20\347\22Q\20\350',\20\350\3623\20\352\7\16\20\352\322\25\20\353\346\360\20\354\261\367\20\355\306\322\20\356\221\331\20\357\257\356\220\360q\273\20\361\217\320\220\362\177\301\220\363o\262\220\364_\243\220\365O\224\220\366?\205\220\367/v\220\370(\242\20\371\17X\220\372\10\204\20\372\370\203 \373\350f\20\374\330e \375\310H\20\376\270G \377\250*\20\0\230) \1\210\f\20\2x\v \3q(\220\4a'\240\5Q\n\220\6A\t\240\0070\354\220\7\215C\240\t\20\316\220\t\255\277 \n\360\260\220\v\340\257\240\f\331\315\20\r\300\221\240\16\271\257\20\17\251\256 \20\231\221\20\21\211\220 \22ys\20\23ir \24YU\20\25IT \02697\20\27)6 \30\"S\220\31\t\30 \32\0025\220\32\3624\240\33\342\27\220\34\322\26\240\35\301\371\220\36\261\370\240\37\241\333\220 v+ !\201\275\220\"V\r #j\332\20$5\357 %J\274\20&\25\321 '*\236\20'\376\355\240)\n\200\20)\336\317\240*\352b\20+\276\261\240,\323~\220-\236\223\240.\263`\220/~u\2400\223B\2201g\222 2s$\2203Gt 4S\6\2205'V 62\350\2207\0078 8\34\5\0208\347\32 9\373\347\20:\306\374 ;\333\311\20<\260\30\240=\273\253\20>\217\372\240?\233\215\20@o\334\240A\204\251\220BO\276\240Cd\213\220D/\240\240EDm\220E\363\323 G-\212\20G\323\265 I\rl\20I\263\227 J\355N\20K\234\263\240L\326j\220M|\225\240N\266L\220O\\w\240P\226.\220Q<Y\240Rv\20\220S\34;\240TU\362\220T\374\35\240V5\324\220V\345: X\36\361\20X\305\34 Y\376\323\20Z\244\376 [\336\265\20\\\204\340 ]\276\227\20^d\302 _\236y\20`M\336\240a\207\225\220b-\300\240cgw\220d\r\242\240eGY\220e\355\204\240g';\220g\315f\240i\7\35\220i\255H\240j\346\377\220k\226e l\320\34\20mvG n\257\376\20oV) p\217\340\20q6\v ro\302\20s\25\355 tO\244\20t\377\t\240v8\300\220v\336\353\240x\30\242\220x\276\315\240y\370\204\220z\236\257\240{\330f\220|~\221\240}\270H\220~^s\240\177\230*\220\2\1\2\1\2\3\4\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\377\377\221&\0\0\377\377\235\220\1\4\377\377\217\200\0\10\377\377\235\220\1\f\377\377\235\220\1\20LMT\0PDT\0PST\0PWT\0PPT\0\0\0\0\0\1\0\0\0\0\1TZif2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\5\0\0\0\5\0\0\0\0\0\0\0\273\0\0\0\5\0\0\0\24\370\0\0\0\0\0\0\0\377\377\377\377^\4\32\300\377\377\377\377\236\246H\240\377\377\377\377\237\273\25\220\377\377\377\377\240\206*\240\377\377\377\377\241\232\367\220\377\377\377\377\313\211\32\240\377\377\377\377\322#\364p\377\377\377\377\322a&\20\377\377\377\377\326\376t\\\377\377\377\377\330\200\255\220\377\377\377\377\332\376\303\220\377\377\377\377\333\300\220\20\377\377\377\377\334\336\245\220\377\377\377\377\335\251\254\220\377\377\377\377\336\276\207\220\377\377\377\377\337\211\216\220\377\377\377\377\340\236i\220\377\377\377\377\341ip\220\377\377\377\377\342~K\220\377\377\377\377\343IR\220\377\377\377\377\344^-\220\377\377\377\377\345)4\220\377\377\377\377\346GJ\20\377\377\377\377\347\22Q\20\377\377\377\377\350',\20\377\377\377\377\350\3623\20\377\377\377\377\352\7\16\20\377\377\377\377\352\322\25\20\377\377\377\377\353\346\360\20\377\377\377\377\354\261\367\20\377\377\377\377\355\306\322\20\377\377\377\377\356\221\331\20\377\377\377\377\357\257\356\220\377\377\377\377\360q\273\20\377\377\377\377\361\217\320\220\377\377\377\377\362\177\301\220\377\377\377\377\363o\262\220\377\377\377\377\364_\243\220\377\377\377\377\365O\224\220\377\377\377\377\366?\205\220\377\377\377\377\367/v\220\377\377\377\377\370(\242\20\377\377\377\377\371\17X\220\377\377\377\377\372\10\204\20\377\377\377\377\372\370\203 \377\377\377\377\373\350f\20\377\377\377\377\374\330e \377\377\377\377\375\310H\20\377\377\377\377\376\270G \377\377\377\377\377\250*\20\0\0\0\0\0\230) \0\0\0\0\1\210\f\20\0\0\0\0\2x\v \0\0\0\0\3q(\220\0\0\0\0\4a'\240\0\0\0\0\5Q\n\220\0\0\0\0\6A\t\240\0\0\0\0\0070\354\220\0\0\0\0\7\215C\240\0\0\0\0\t\20\316\220\0\0\0\0\t\255\277 \0\0\0\0\n\360\260\220\0\0\0\0\v\340\257\240\0\0\0\0\f\331\315\20\0\0\0\0\r\300\221\240\0\0\0\0\16\271\257\20\0\0\0\0\17\251\256 \0\0\0\0\20\231\221\20\0\0\0\0\21\211\220 \0\0\0\0\22ys\20\0\0\0\0\23ir \0\0\0\0\24YU\20\0\0\0\0\25IT \0\0\0\0\02697\20\0\0\0\0\27)6 \0\0\0\0\30\"S\220\0\0\0\0\31\t\30 \0\0\0\0\32\0025\220\0\0\0\0\32\3624\240\0\0\0\0\33\342\27\220\0\0\0\0\34\322\26\240\0\0\0\0\35\301\371\220\0\0\0\0\36\261\370\240\0\0\0\0\37\241\333\220\0\0\0\0 v+ \0\0\0\0!\201\275\220\0\0\0\0\"V\r \0\0\0\0#j\332\20\0\0\0\0$5\357 \0\0\0\0%J\274\20\0\0\0\0&\25\321 \0\0\0\0'*\236\20\0\0\0\0'\376\355\240\0\0\0\0)\n\200\20\0\0\0\0)\336\317\240\0\0\0\0*\352b\20\0\0\0\0+\276\261\240\0\0\0\0,\323~\220\0\0\0\0-\236\223\240\0\0\0\0.\263`\220\0\0\0\0/~u\240\0\0\0\0000\223B\220\0\0\0\0001g\222 \0\0\0\0002s$\220\0\0\0\0003Gt \0\0\0\0004S\6\220\0\0\0\0005'V \0\0\0\00062\350\220\0\0\0\0007\0078 \0\0\0\0008\34\5\20\0\0\0\0008\347\32 \0\0\0\0009\373\347\20\0\0\0\0:\306\374 \0\0\0\0;\333\311\20\0\0\0\0<\260\30\240\0\0\0\0=\273\253\20\0\0\0\0>\217\372\240\0\0\0\0?\233\215\20\0\0\0\0@o\334\240\0\0\0\0A\204\251\220\0\0\0\0BO\276\240\0\0\0\0Cd\213\220\0\0\0\0D/\240\240\0\0\0\0EDm\220\0\0\0\0E\363\323 \0\0\0\0G-\212\20\0\0\0\0G\323\265 \0\0\0\0I\rl\20\0\0\0\0I\263\227 \0\0\0\0J\355N\20\0\0\0\0K\234\263\240\0\0\0\0L\326j\220\0\0\0\0M|\225\240\0\0\0\0N\266L\220\0\0\0\0O\\w\240\0\0\0\0P\226.\220\0\0\0\0Q<Y\240\0\0\0\0Rv\20\220\0\0\0\0S\34;\240\0\0\0\0TU\362\220\0\0\0\0T\374\35\240\0\0\0\0V5\324\220\0\0\0\0V\345: \0\0\0\0X\36\361\20\0\0\0\0X\305\34 \0\0\0\0Y\376\323\20\0\0\0\0Z\244\376 \0\0\0\0[\336\265\20\0\0\0\0\\\204\340 \0\0\0\0]\276\227\20\0\0\0\0^d\302 \0\0\0\0_\236y\20\0\0\0\0`M\336\240\0\0\0\0a\207\225\220\0\0\0\0b-\300\240\0\0\0\0cgw\220\0\0\0\0d\r\242\240\0\0\0\0eGY\220\0\0\0\0e\355\204\240\0\0\0\0g';\220\0\0\0\0g\315f\240\0\0\0\0i\7\35\220\0\0\0\0i\255H\240\0\0\0\0j\346\377\220\0\0\0\0k\226e \0\0\0\0l\320\34\20\0\0\0\0mvG \0\0\0\0n\257\376\20\0\0\0\0oV) \0\0\0\0p\217\340\20\0\0\0\0q6\v \0\0\0\0ro\302\20\0\0\0\0s\25\355 \0\0\0\0tO\244\20\0\0\0\0t\377\t\240\0\0\0\0v8\300\220\0\0\0\0v\336\353\240\0\0\0\0x\30\242\220\0\0\0\0x\276\315\240\0\0\0\0y\370\204\220\0\0\0\0z\236\257\240\0\0\0\0{\330f\220\0\0\0\0|~\221\240\0\0\0\0}\270H\220\0\0\0\0~^s\240\0\0\0\0\177\230*\220\0\2\1\2\1\2\3\4\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\377\377\221&\0\0\377\377\235\220\1\4\377\377\217\200\0\10\377\377\235\220\1\f\377\377\235\220\1\20LMT\0PDT\0PST\0PWT\0PPT\0\0\0\0\0\1\0\0\0\0\1\nPST8PDT,M3.2.0,M11.1.0\n", 4096) = 2845
7968  _llseek(3, -24, [2821], SEEK_CUR) = 0
7968  read(3, "\nPST8PDT,M3.2.0,M11.1.0\n", 4096) = 24
7968  close(3)                          = 0
7968  open("/home/preston/nginx/logs/error.log", O_WRONLY|O_CREAT|O_APPEND|O_LARGEFILE, 0644) = 3
7968  open("/usr/lib/ssl/openssl.cnf", O_RDONLY|O_LARGEFILE) = 4
7968  fstat64(4, {st_dev=makedev(8, 1), st_ino=788631, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=10835, st_atime=2018/04/08-17:32:43.651947437, st_mtime=2017/05/19-07:19:14, st_ctime=2017/09/14-13:17:06.151883895}) = 0
7968  read(4, "#\n# OpenSSL example configuration file.\n# This is mostly being used for generation of certificate requests.\n#\n\n# This definition stops the following lines choking if HOME isn't\n# defined.\nHOME\t\t\t= .\nRANDFILE\t\t= $ENV::HOME/.rnd\n\n# Extra OBJECT IDENTIFIER info:\n#oid_file\t\t= $ENV::HOME/.oid\noid_section\t\t= new_oids\n\n# To use this configuration file with the \"-extfile\" option of the\n# \"openssl x509\" utility, name here the section containing the\n# X.509v3 extensions to use:\n# extensions\t\t= \n# (Alternatively, use a configuration file that has only\n# X.509v3 extensions in its main [= default] section.)\n\n[ new_oids ]\n\n# We can add new OIDs in here for use by 'ca', 'req' and 'ts'.\n# Add a simple OID like this:\n# testoid1=1.2.3.4\n# Or use config file substitution like this:\n# testoid2=${testoid1}.5.6\n\n# Policies used by the TSA examples.\ntsa_policy1 = 1.2.3.4.1\ntsa_policy2 = 1.2.3.4.5.6\ntsa_policy3 = 1.2.3.4.5.7\n\n####################################################################\n[ ca ]\ndefault_ca\t= CA_default\t\t# The default ca section\n\n####################################################################\n[ CA_default ]\n\ndir\t\t= ./demoCA\t\t# Where everything is kept\ncerts\t\t= $dir/certs\t\t# Where the issued certs are kept\ncrl_dir\t\t= $dir/crl\t\t# Where the issued crl are kept\ndatabase\t= $dir/index.txt\t# database index file.\n#unique_subject\t= no\t\t\t# Set to 'no' to allow creation of\n\t\t\t\t\t# several ctificates with same subject.\nnew_certs_dir\t= $dir/newcerts\t\t# default place for new certs.\n\ncertificate\t= $dir/cacert.pem \t# The CA certificate\nserial\t\t= $dir/serial \t\t# The current serial number\ncrlnumber\t= $dir/crlnumber\t# the current crl number\n\t\t\t\t\t# must be commented out to leave a V1 CRL\ncrl\t\t= $dir/crl.pem \t\t# The current CRL\nprivate_key\t= $dir/private/cakey.pem# The private key\nRANDFILE\t= $dir/private/.rand\t# private random number file\n\nx509_extensions\t= usr_cert\t\t# The extentions to add to the cert\n\n# Comment out the following two lines for the \"traditional\"\n# (and highly broken) format.\nname_opt \t= ca_default\t\t# Subject Name options\ncert_opt \t= ca_default\t\t# Certificate field options\n\n# Extension copying option: use with caution.\n# copy_extensions = copy\n\n# Extensions to add to a CRL. Note: Netscape communicator chokes on V2 CRLs\n# so this is commented out by default to leave a V1 CRL.\n# crlnumber must also be commented out to leave a V1 CRL.\n# crl_extensions\t= crl_ext\n\ndefault_days\t= 365\t\t\t# how long to certify for\ndefault_crl_days= 30\t\t\t# how long before next CRL\ndefault_md\t= default\t\t# use public key default MD\npreserve\t= no\t\t\t# keep passed DN ordering\n\n# A few difference way of specifying how similar the request should look\n# For type CA, the listed attributes must be the same, and the optional\n# and supplied fields are just that :-)\npolicy\t\t= policy_match\n\n# For the CA policy\n[ policy_match ]\ncountryName\t\t= match\nstateOrProvinceName\t= match\norganizationName\t= match\norganizationalUnitName\t= optional\ncommonName\t\t= supplied\nemailAddress\t\t= optional\n\n# For the 'anything' policy\n# At this point in time, you must list all acceptable 'object'\n# types.\n[ policy_anything ]\ncountryName\t\t= optional\nstateOrProvinceName\t= optional\nlocalityName\t\t= optional\norganizationName\t= optional\norganizationalUnitName\t= optional\ncommonName\t\t= supplied\nemailAddress\t\t= optional\n\n####################################################################\n[ req ]\ndefault_bits\t\t= 2048\ndefault_keyfile \t= privkey.pem\ndistinguished_name\t= req_distinguished_name\nattributes\t\t= req_attributes\nx509_extensions\t= v3_ca\t# The extentions to add to the self signed cert\n\n# Passwords for private keys if not present they will be prompted for\n# input_password = secret\n# output_password = secret\n\n# This sets a mask for permitted string types. There are several options. \n# default: PrintableString, T61String, BMPString.\n# pkix\t : PrintableString, BMPString (PKIX recommendation before 2004)\n# utf8only: only UTF8Strings (PKIX recommendation after 2004).\n# nombstr : PrintableString, T61String (no BMPStrings or UTF8Strings).\n# MASK:XXXX a literal mask value.\n# WARNING: ancient versions of ", 4096) = 4096
7968  read(4, "Netscape crash on BMPStrings or UTF8Strings.\nstring_mask = utf8only\n\n# req_extensions = v3_req # The extensions to add to a certificate request\n\n[ req_distinguished_name ]\ncountryName\t\t\t= Country Name (2 letter code)\ncountryName_default\t\t= AU\ncountryName_min\t\t\t= 2\ncountryName_max\t\t\t= 2\n\nstateOrProvinceName\t\t= State or Province Name (full name)\nstateOrProvinceName_default\t= Some-State\n\nlocalityName\t\t\t= Locality Name (eg, city)\n\n0.organizationName\t\t= Organization Name (eg, company)\n0.organizationName_default\t= Internet Widgits Pty Ltd\n\n# we can do this but it is not needed normally :-)\n#1.organizationName\t\t= Second Organization Name (eg, company)\n#1.organizationName_default\t= World Wide Web Pty Ltd\n\norganizationalUnitName\t\t= Organizational Unit Name (eg, section)\n#organizationalUnitName_default\t=\n\ncommonName\t\t\t= Common Name (e.g. server FQDN or YOUR name)\ncommonName_max\t\t\t= 64\n\nemailAddress\t\t\t= Email Address\nemailAddress_max\t\t= 64\n\n# SET-ex3\t\t\t= SET extension number 3\n\n[ req_attributes ]\nchallengePassword\t\t= A challenge password\nchallengePassword_min\t\t= 4\nchallengePassword_max\t\t= 20\n\nunstructuredName\t\t= An optional company name\n\n[ usr_cert ]\n\n# These extensions are added when 'ca' signs a request.\n\n# This goes against PKIX guidelines but some CAs do it and some software\n# requires this to avoid interpreting an end user certificate as a CA.\n\nbasicConstraints=CA:FALSE\n\n# Here are some examples of the usage of nsCertType. If it is omitted\n# the certificate can be used for anything *except* object signing.\n\n# This is OK for an SSL server.\n# nsCertType\t\t\t= server\n\n# For an object signing certificate this would be used.\n# nsCertType = objsign\n\n# For normal client use this is typical\n# nsCertType = client, email\n\n# and for everything including object signing:\n# nsCertType = client, email, objsign\n\n# This is typical in keyUsage for a client certificate.\n# keyUsage = nonRepudiation, digitalSignature, keyEncipherment\n\n# This will be displayed in Netscape's comment listbox.\nnsComment\t\t\t= \"OpenSSL Generated Certificate\"\n\n# PKIX recommendations harmless if included in all certificates.\nsubjectKeyIdentifier=hash\nauthorityKeyIdentifier=keyid,issuer\n\n# This stuff is for subjectAltName and issuerAltname.\n# Import the email address.\n# subjectAltName=email:copy\n# An alternative to produce certificates that aren't\n# deprecated according to PKIX.\n# subjectAltName=email:move\n\n# Copy subject details\n# issuerAltName=issuer:copy\n\n#nsCaRevocationUrl\t\t= http://www.domain.dom/ca-crl.pem\n#nsBaseUrl\n#nsRevocationUrl\n#nsRenewalUrl\n#nsCaPolicyUrl\n#nsSslServerName\n\n# This is required for TSA certificates.\n# extendedKeyUsage = critical,timeStamping\n\n[ v3_req ]\n\n# Extensions to add to a certificate request\n\nbasicConstraints = CA:FALSE\nkeyUsage = nonRepudiation, digitalSignature, keyEncipherment\n\n[ v3_ca ]\n\n\n# Extensions for a typical CA\n\n\n# PKIX recommendation.\n\nsubjectKeyIdentifier=hash\n\nauthorityKeyIdentifier=keyid:always,issuer\n\n# This is what PKIX recommends but some broken software chokes on critical\n# extensions.\n#basicConstraints = critical,CA:true\n# So we do this instead.\nbasicConstraints = CA:true\n\n# Key usage: this is typical for a CA certificate. However since it will\n# prevent it being used as an test self-signed certificate it is best\n# left out by default.\n# keyUsage = cRLSign, keyCertSign\n\n# Some might want this also\n# nsCertType = sslCA, emailCA\n\n# Include email address in subject alt name: another PKIX recommendation\n# subjectAltName=email:copy\n# Copy issuer details\n# issuerAltName=issuer:copy\n\n# DER hex encoding of an extension: beware experts only!\n# obj=DER:02:03\n# Where 'obj' is a standard or added object\n# You can even override a supported extension:\n# basicConstraints= critical, DER:30:03:01:01:FF\n\n[ crl_ext ]\n\n# CRL extensions.\n# Only issuerAltName and authorityKeyIdentifier make any sense in a CRL.\n\n# issuerAltName=issuer:copy\nauthorityKeyIdentifier=keyid:always\n\n[ proxy_cert_ext ]\n# These extensions should be added when creating a proxy certificate\n\n# This goes against PKIX guidelines but some CAs do it and some software\n# requires", 4096) = 4096
7968  read(4, " this to avoid interpreting an end user certificate as a CA.\n\nbasicConstraints=CA:FALSE\n\n# Here are some examples of the usage of nsCertType. If it is omitted\n# the certificate can be used for anything *except* object signing.\n\n# This is OK for an SSL server.\n# nsCertType\t\t\t= server\n\n# For an object signing certificate this would be used.\n# nsCertType = objsign\n\n# For normal client use this is typical\n# nsCertType = client, email\n\n# and for everything including object signing:\n# nsCertType = client, email, objsign\n\n# This is typical in keyUsage for a client certificate.\n# keyUsage = nonRepudiation, digitalSignature, keyEncipherment\n\n# This will be displayed in Netscape's comment listbox.\nnsComment\t\t\t= \"OpenSSL Generated Certificate\"\n\n# PKIX recommendations harmless if included in all certificates.\nsubjectKeyIdentifier=hash\nauthorityKeyIdentifier=keyid,issuer\n\n# This stuff is for subjectAltName and issuerAltname.\n# Import the email address.\n# subjectAltName=email:copy\n# An alternative to produce certificates that aren't\n# deprecated according to PKIX.\n# subjectAltName=email:move\n\n# Copy subject details\n# issuerAltName=issuer:copy\n\n#nsCaRevocationUrl\t\t= http://www.domain.dom/ca-crl.pem\n#nsBaseUrl\n#nsRevocationUrl\n#nsRenewalUrl\n#nsCaPolicyUrl\n#nsSslServerName\n\n# This really needs to be in place for it to be a proxy certificate.\nproxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo\n\n####################################################################\n[ tsa ]\n\ndefault_tsa = tsa_config1\t# the default TSA section\n\n[ tsa_config1 ]\n\n# These are used by the TSA reply generation only.\ndir\t\t= ./demoCA\t\t# TSA root directory\nserial\t\t= $dir/tsaserial\t# The current serial number (mandatory)\ncrypto_device\t= builtin\t\t# OpenSSL engine to use for signing\nsigner_cert\t= $dir/tsacert.pem \t# The TSA signing certificate\n\t\t\t\t\t# (optional)\ncerts\t\t= $dir/cacert.pem\t# Certificate chain to include in reply\n\t\t\t\t\t# (optional)\nsigner_key\t= $dir/private/tsakey.pem # The TSA private key (optional)\n\ndefault_policy\t= tsa_policy1\t\t# Policy if request did not specify it\n\t\t\t\t\t# (optional)\nother_policies\t= tsa_policy2, tsa_policy3\t# acceptable policies (optional)\ndigests\t\t= md5, sha1\t\t# Acceptable message digests (mandatory)\naccuracy\t= secs:1, millisecs:500, microsecs:100\t# (optional)\nclock_precision_digits  = 0\t# number of digits after dot. (optional)\nordering\t\t= yes\t# Is ordering defined for timestamps?\n\t\t\t\t# (optional, default: no)\ntsa_name\t\t= yes\t# Must the TSA name be included in the reply?\n\t\t\t\t# (optional, default: no)\ness_cert_id_chain\t= no\t# Must the ESS cert id chain be included?\n\t\t\t\t# (optional, default: no)\n", 4096) = 2643
7968  read(4, "", 4096)                 = 0
7968  close(4)                          = 0
7968  uname({sysname="Linux", nodename="xub32", release="4.13.0-38-generic", version="#43~16.04.1-Ubuntu SMP Wed Mar 14 17:46:42 UTC 2018", machine="i686", domainname="(none)"}) = 0
7968  time(NULL)                        = 1523312673
7968  open("/sys/devices/system/cpu/online", O_RDONLY|O_CLOEXEC) = 4
7968  read(4, "0\n", 8192)              = 2
7968  close(4)                          = 0
7968  prlimit64(0, RLIMIT_NOFILE, NULL, {rlim_cur=1024, rlim_max=1024*1024}) = 0
7968  stat64("/etc/localtime", {st_dev=makedev(8, 1), st_ino=937360, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2845, st_atime=2018/04/08-17:32:42.687947457, st_mtime=2017/11/09-16:00:05, st_ctime=2017/11/16-12:19:50.704847991}) = 0
7968  uname({sysname="Linux", nodename="xub32", release="4.13.0-38-generic", version="#43~16.04.1-Ubuntu SMP Wed Mar 14 17:46:42 UTC 2018", machine="i686", domainname="(none)"}) = 0
7968  open("/home/preston/nginx/nginx.conf", O_RDONLY|O_LARGEFILE) = 4
7968  fstat64(4, {st_dev=makedev(8, 1), st_ino=690024, st_mode=S_IFREG|0644, st_nlink=1, st_uid=1000, st_gid=1000, st_blksize=4096, st_blocks=8, st_size=1634, st_atime=2018/04/09-10:39:30.638245981, st_mtime=2018/04/05-11:07:09.546181145, st_ctime=2018/04/05-11:07:09.546181145}) = 0
7968  pread64(4, "user preston;\nworker_processes auto;\npid /home/preston/nginx.pid;\ndaemon off;\nmaster_process off;\n\nevents {\n\tworker_connections 768;\n\t# multi_accept on;\n}\n\nhttp {\n\n\t##\n\t# Basic Settings\n\t##\n\n\tsendfile on;\n\ttcp_nopush on;\n\ttcp_nodelay on;\n\tkeepalive_timeout 65;\n\ttypes_hash_max_size 2048;\n\t# server_tokens off;\n\n\t# server_names_hash_bucket_size 64;\n\t# server_name_in_redirect off;\n\n\tinclude /etc/nginx/mime.types;\n\tdefault_type application/octet-stream;\n\n\t##\n\t# SSL Settings\n\t##\n\n\tssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE\n\tssl_prefer_server_ciphers on;\n\n\t##\n\t# Logging Settings\n\t##\n\n\taccess_log /home/preston/nginx/access.log;\n\terror_log /home/preston/nginx/error.log;\n\n\t##\n\t# Gzip Settings\n\t##\n\n\tgzip on;\n\tgzip_disable \"msie6\";\n\n\t# gzip_vary on;\n\t# gzip_proxied any;\n\t# gzip_comp_level 6;\n\t# gzip_buffers 16 8k;\n\t# gzip_http_version 1.1;\n\t# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;\n\n\t##\n\t# Virtual Host Configs\n\t##\n\n\tinclude /etc/nginx/conf.d/*.conf;\n\tinclude /etc/nginx/sites-enabled/*;\n\tserver {\n        listen 9000;\n\t\taccess_log /home/preston/nginx/access.log;\n\t\terror_log /home/preston/nginx/error.log;\n\t}\n}\n\n\n#mail {\n#\t# See sample authentication script at:\n#\t# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript\n# \n#\t# auth_http localhost/auth.php;\n#\t# pop3_capabilities \"TOP\" \"USER\";\n#\t# imap_capabilities \"IMAP4rev1\" \"UIDPLUS\";\n# \n#\tserver {\n#\t\tlisten     localhost:110;\n#\t\tprotocol   pop3;\n#\t\tproxy      on;\n#\t}\n# \n#\tserver {\n#\t\tlisten     localhost:143;\n#\t\tprotocol   imap;\n#\t\tproxy      on;\n#\t}\n#}\n", 1634, 0) = 1634
7968  geteuid32()                       = 1000
7968  write(3, "2018/04/09 15:24:33 [warn] 7968#0: the \"user\" directive makes sense only if the master process runs with super-user privileges, ignored in /home/preston/nginx/nginx.conf:1\n", 172) = 172
7968  write(2, "nginx: [warn] the \"user\" directive makes sense only if the master process runs with super-user privileges, ignored in /home/preston/nginx/nginx.conf:1\n", 151) = 151
7968  epoll_create(100)                 = 5
7968  close(5)                          = 0
7968  open("/etc/nginx/mime.types", O_RDONLY|O_LARGEFILE) = 5
7968  fstat64(5, {st_dev=makedev(8, 1), st_ino=822327, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3957, st_atime=2018/04/08-17:32:43.687947437, st_mtime=2017/02/11-13:00:57, st_ctime=2018/04/03-11:22:54.919671190}) = 0
7968  pread64(5, "\ntypes {\n    text/html                             html htm shtml;\n    text/css                              css;\n    text/xml                              xml;\n    image/gif                             gif;\n    image/jpeg                            jpeg jpg;\n    application/javascript                js;\n    application/atom+xml                  atom;\n    application/rss+xml                   rss;\n\n    text/mathml                           mml;\n    text/plain                            txt;\n    text/vnd.sun.j2me.app-descriptor      jad;\n    text/vnd.wap.wml                      wml;\n    text/x-component                      htc;\n\n    image/png                             png;\n    image/tiff                            tif tiff;\n    image/vnd.wap.wbmp                    wbmp;\n    image/x-icon                          ico;\n    image/x-jng                           jng;\n    image/x-ms-bmp                        bmp;\n    image/svg+xml                         svg svgz;\n    image/webp                            webp;\n\n    application/font-woff                 woff;\n    application/java-archive              jar war ear;\n    application/json                      json;\n    application/mac-binhex40              hqx;\n    application/msword                    doc;\n    application/pdf                       pdf;\n    application/postscript                ps eps ai;\n    application/rtf                       rtf;\n    application/vnd.apple.mpegurl         m3u8;\n    application/vnd.ms-excel              xls;\n    application/vnd.ms-fontobject         eot;\n    application/vnd.ms-powerpoint         ppt;\n    application/vnd.wap.wmlc              wmlc;\n    application/vnd.google-earth.kml+xml  kml;\n    application/vnd.google-earth.kmz      kmz;\n    application/x-7z-compressed           7z;\n    application/x-cocoa                   cco;\n    application/x-java-archive-diff       jardiff;\n    application/x-java-jnlp-file          jnlp;\n    application/x-makeself                run;\n    application/x-perl                    pl pm;\n    application/x-pilot                   prc pdb;\n    application/x-rar-compressed          rar;\n    application/x-redhat-package-manager  rpm;\n    application/x-sea                     sea;\n    application/x-shockwave-flash         swf;\n    application/x-stuffit                 sit;\n    application/x-tcl                     tcl tk;\n    application/x-x509-ca-cert            der pem crt;\n    application/x-xpinstall               xpi;\n    application/xhtml+xml                 xhtml;\n    application/xspf+xml                  xspf;\n    application/zip                       zip;\n\n    application/octet-stream              bin exe dll;\n    application/octet-stream              deb;\n    application/octet-stream              dmg;\n    application/octet-stream              iso img;\n    application/octet-stream              msi msp msm;\n\n    application/vnd.openxmlformats-officedocument.wordprocessingml.document    docx;\n    application/vnd.openxmlformats-officedocument.spreadsheetml.sheet          xlsx;\n    application/vnd.openxmlformats-officedocument.presentationml.presentation  pptx;\n\n    audio/midi                            mid midi kar;\n    audio/mpeg                            mp3;\n    audio/ogg                             ogg;\n    audio/x-m4a                           m4a;\n    audio/x-realaudio                     ra;\n\n    video/3gpp                            3gpp 3gp;\n    video/mp2t                            ts;\n    video/mp4                             mp4;\n    video/mpeg                            mpeg mpg;\n    video/quicktime                       mov;\n    video/webm                            webm;\n    video/x-flv                           flv;\n    video/x-m4v                           m4v;\n    video/x-mng                           mng;\n    video/x-ms-asf                        asx asf;\n    video/x-ms-wmv                        wmv;\n    video/x-msvideo                       avi;\n}\n", 3957, 0) = 3957
7968  close(5)                          = 0
7968  open("/etc/nginx/conf.d", O_RDONLY|O_NONBLOCK|O_LARGEFILE|O_DIRECTORY|O_CLOEXEC) = 5
7968  fstat64(5, {st_dev=makedev(8, 1), st_ino=822330, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/04/08-17:32:43.687947437, st_mtime=2017/07/12-03:34:48, st_ctime=2018/04/03-11:22:53.839448204}) = 0
7968  brk(0x8164000)                    = 0x8164000
7968  getdents64(5, [{d_ino=822330, d_off=1929916623, d_reclen=24, d_type=DT_DIR, d_name="."}, {d_ino=822315, d_off=2147483647, d_reclen=24, d_type=DT_DIR, d_name=".."}], 32768) = 48
7968  getdents64(5, [], 32768)          = 0
7968  brk(0x815c000)                    = 0x815c000
7968  close(5)                          = 0
7968  open("/etc/nginx/sites-enabled", O_RDONLY|O_NONBLOCK|O_LARGEFILE|O_DIRECTORY|O_CLOEXEC) = 5
7968  fstat64(5, {st_dev=makedev(8, 1), st_ino=822318, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/04/08-17:32:43.687947437, st_mtime=2018/04/03-11:50:35.201924381, st_ctime=2018/04/03-11:50:35.201924381}) = 0
7968  getdents64(5, [{d_ino=822318, d_off=1863193200, d_reclen=24, d_type=DT_DIR, d_name="."}, {d_ino=822345, d_off=1929916623, d_reclen=32, d_type=DT_LNK, d_name="default"}, {d_ino=822315, d_off=2147483647, d_reclen=24, d_type=DT_DIR, d_name=".."}], 32768) = 80
7968  fstatat64(5, "default", {st_dev=makedev(8, 1), st_ino=822326, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2044, st_atime=2018/04/08-17:32:43.687947437, st_mtime=2018/04/03-11:50:35.201924381, st_ctime=2018/04/03-11:50:35.201924381}, 0) = 0
7968  getdents64(5, [], 32768)          = 0
7968  close(5)                          = 0
7968  open("/etc/nginx/sites-enabled/default", O_RDONLY|O_LARGEFILE) = 5
7968  fstat64(5, {st_dev=makedev(8, 1), st_ino=822326, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2044, st_atime=2018/04/08-17:32:43.687947437, st_mtime=2018/04/03-11:50:35.201924381, st_ctime=2018/04/03-11:50:35.201924381}) = 0
7968  pread64(5, "##\n# You should look at the following URL's in order to grasp a solid understanding\n# of Nginx configuration files in order to fully unleash the power of Nginx.\n# http://wiki.nginx.org/Pitfalls\n# http://wiki.nginx.org/QuickStart\n# http://wiki.nginx.org/Configuration\n#\n# Generally, you will want to move this file somewhere, and start with a clean\n# file but keep this around for reference. Or just disable in sites-enabled.\n#\n# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.\n##\n\n# Default server configuration\n#\nserver {\n\tlisten 9000 default_server;\n\n\t# SSL configuration\n\t#\n\t# listen 443 ssl default_server;\n\t# listen [::]:443 ssl default_server;\n\t#\n\t# Note: You should disable gzip for SSL traffic.\n\t# See: https://bugs.debian.org/773332\n\t#\n\t# Read up on ssl_ciphers to ensure a secure configuration.\n\t# See: https://bugs.debian.org/765782\n\t#\n\t# Self signed certs generated by the ssl-cert package\n\t# Don't use them in a production server!\n\t#\n\t# include snippets/snakeoil.conf;\n\n\troot /var/www/html;\n\n\t# Add index.php to the list if you are using PHP\n\tindex index.html index.htm index.nginx-debian.html;\n\n\tserver_name _;\n\n\tlocation / {\n\t\t# First attempt to serve request as file, then\n\t\t# as directory, then fall back to displaying a 404.\n\t\ttry_files $uri $uri/ =404;\n\t}\n\n\t# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n\t#\n\t#location ~ \\.php$ {\n\t#\tinclude snippets/fastcgi-php.conf;\n\t#\n\t#\t# With php7.0-cgi alone:\n\t#\tfastcgi_pass 127.0.0.1:9000;\n\t#\t# With php7.0-fpm:\n\t#\tfastcgi_pass unix:/run/php/php7.0-fpm.sock;\n\t#}\n\n\t# deny access to .htaccess files, if Apache's document root\n\t# concurs with nginx's one\n\t#\n\t#location ~ /\\.ht {\n\t#\tdeny all;\n\t#}\n}\n\n\n# Virtual Host configuration for example.com\n#\n# You can move that to a different file under sites-available/ and symlink that\n# to sites-enabled/ to enable it.\n#\n#server {\n#\tlisten 80;\n#\tlisten [::]:80;\n#\n#\tserver_name example.com;\n#\n#\troot /var/www/example.com;\n#\tindex index.html;\n#\n#\tlocation / {\n#\t\ttry_files $uri $uri/ =404;\n#\t}\n#}\n", 2044, 0) = 2044
7968  close(5)                          = 0
7968  mmap2(NULL, 266240, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7a8a000
7968  mmap2(NULL, 266240, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7a49000
7968  mmap2(NULL, 266240, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7a08000
7968  mmap2(NULL, 200704, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb79d7000
7968  mmap2(NULL, 200704, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb79a6000
7968  mmap2(NULL, 200704, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7975000
7968  munmap(0xb7975000, 200704)        = 0
7968  munmap(0xb79a6000, 200704)        = 0
7968  munmap(0xb79d7000, 200704)        = 0
7968  munmap(0xb7a08000, 266240)        = 0
7968  munmap(0xb7a49000, 266240)        = 0
7968  munmap(0xb7a8a000, 266240)        = 0
7968  close(4)                          = 0
7968  geteuid32()                       = 1000
7968  mkdir("/home/preston/nginx/client_body_temp", 0700) = -1 EEXIST (File exists)
7968  mkdir("/home/preston/nginx/proxy_temp", 0700) = -1 EEXIST (File exists)
7968  mkdir("/home/preston/nginx/fastcgi_temp", 0700) = -1 EEXIST (File exists)
7968  mkdir("/home/preston/nginx/uwsgi_temp", 0700) = -1 EEXIST (File exists)
7968  mkdir("/home/preston/nginx/scgi_temp", 0700) = -1 EEXIST (File exists)
7968  open("/home/preston/nginx/access.log", O_WRONLY|O_CREAT|O_APPEND|O_LARGEFILE, 0644) = 4
7968  fcntl64(4, F_SETFD, FD_CLOEXEC)   = 0
7968  open("/home/preston/nginx/error.log", O_WRONLY|O_CREAT|O_APPEND|O_LARGEFILE, 0644) = 5
7968  fcntl64(5, F_SETFD, FD_CLOEXEC)   = 0
7968  open("/home/preston/nginx/logs/error.log", O_WRONLY|O_CREAT|O_APPEND|O_LARGEFILE, 0644) = 6
7968  fcntl64(6, F_SETFD, FD_CLOEXEC)   = 0
7968  socket(PF_INET, SOCK_STREAM, IPPROTO_IP) = 7
7968  setsockopt(7, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
7968  ioctl(7, FIONBIO, [1])            = 0
7968  bind(7, {sa_family=AF_INET, sin_port=htons(9000), sin_addr=inet_addr("0.0.0.0")}, 16) = 0
7968  listen(7, 511)                    = 0
7968  listen(7, 511)                    = 0
7968  prlimit64(0, RLIMIT_NOFILE, NULL, {rlim_cur=1024, rlim_max=1024*1024}) = 0
7968  rt_sigaction(SIGHUP, {0x80713a4, [], 0}, NULL, 8) = 0
7968  rt_sigaction(SIGUSR1, {0x80713a4, [], 0}, NULL, 8) = 0
7968  rt_sigaction(SIGWINCH, {0x80713a4, [], 0}, NULL, 8) = 0
7968  rt_sigaction(SIGTERM, {0x80713a4, [], 0}, NULL, 8) = 0
7968  rt_sigaction(SIGQUIT, {0x80713a4, [], 0}, NULL, 8) = 0
7968  rt_sigaction(SIGUSR2, {0x80713a4, [], 0}, NULL, 8) = 0
7968  rt_sigaction(SIGALRM, {0x80713a4, [], 0}, NULL, 8) = 0
7968  rt_sigaction(SIGINT, {0x80713a4, [], 0}, NULL, 8) = 0
7968  rt_sigaction(SIGIO, {0x80713a4, [], 0}, NULL, 8) = 0
7968  rt_sigaction(SIGCHLD, {0x80713a4, [], 0}, NULL, 8) = 0
7968  rt_sigaction(SIGSYS, {SIG_IGN, [], 0}, NULL, 8) = 0
7968  rt_sigaction(SIGPIPE, {SIG_IGN, [], 0}, NULL, 8) = 0
7968  open("/home/preston/nginx.pid", O_RDWR|O_CREAT|O_TRUNC|O_LARGEFILE, 0644) = 8
7968  pwrite64(8, "7968\n", 5, 0)       = 5
7968  close(8)                          = 0
7968  dup2(6, 2)                        = 2
7968  close(3)                          = 0
7968  epoll_create(384)                 = 3
7968  eventfd2(0, 0)                    = 8
7968  epoll_ctl(3, EPOLL_CTL_ADD, 8, {EPOLLIN|EPOLLET, {u32=135345856, u64=13835044543450396352}}) = 0
7968  brk(0x8185000)                    = 0x8185000
7968  epoll_ctl(3, EPOLL_CTL_ADD, 7, {EPOLLIN|EPOLLRDHUP, {u32=135551200, u64=4430518496}}) = 0
7968  fstat64(1, {st_dev=makedev(0, 21), st_ino=24, st_mode=S_IFCHR|0620, st_nlink=1, st_uid=1000, st_gid=5, st_blksize=1024, st_blocks=0, st_rdev=makedev(136, 21), st_atime=2018/04/09-15:24:32.006890609, st_mtime=2018/04/09-15:24:32.006890609, st_ctime=2018/04/09-10:38:25.006890609}) = 0
7968  write(1, "Added event ptr: 0x81458e0\n", 27) = 27
7968  epoll_wait(3, [{EPOLLIN, {u32=135551200, u64=4430518496}}], 512, -1) = 1
7968  write(1, "event list 0: ptr: 0x81458e0\n", 29) = 29
7968  accept4(7, {sa_family=AF_INET, sin_port=htons(58276), sin_addr=inet_addr("127.0.0.1")}, [16], SOCK_NONBLOCK) = 9
7968  epoll_ctl(3, EPOLL_CTL_ADD, 9, {EPOLLIN|EPOLLRDHUP|EPOLLET, {u32=135551316, u64=13237172472938518868}}) = 0
7968  write(1, "Added event ptr: 0x8145954\n", 27) = 27
7968  epoll_wait(3, [{EPOLLIN, {u32=135551316, u64=13237172472938518868}}], 512, 60000) = 1
7968  write(1, "event list 0: ptr: 0x8145954\n", 29) = 29
7968  recv(9, "GET / HTTP/1.1\r\nHost: localhost:9000\r\nUser-Agent: curl/7.47.0\r\nAccept: */*\r\n\r\n", 1024, 0) = 78
7968  stat64("/var/www/html/", {st_dev=makedev(8, 1), st_ino=148185, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/04/03-11:07:23.783326082, st_mtime=2018/04/03-11:22:55.059700095, st_ctime=2018/04/03-11:22:55.059700095}) = 0
7968  stat64("/var/www/html/", {st_dev=makedev(8, 1), st_ino=148185, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/04/03-11:07:23.783326082, st_mtime=2018/04/03-11:22:55.059700095, st_ctime=2018/04/03-11:22:55.059700095}) = 0
7968  stat64("/var/www/html/index.html", 0xbffff04c) = -1 ENOENT (No such file or directory)
7968  stat64("/var/www/html", {st_dev=makedev(8, 1), st_ino=148185, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2018/04/03-11:07:23.783326082, st_mtime=2018/04/03-11:22:55.059700095, st_ctime=2018/04/03-11:22:55.059700095}) = 0
7968  stat64("/var/www/html/index.htm", 0xbffff04c) = -1 ENOENT (No such file or directory)
7968  stat64("/var/www/html/index.nginx-debian.html", {st_dev=makedev(8, 1), st_ino=174260, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=612, st_atime=2018/04/09-10:39:51.770078480, st_mtime=2018/04/03-11:22:55.059700095, st_ctime=2018/04/03-11:22:55.059700095}) = 0
7968  stat64("/var/www/html/index.nginx-debian.html", {st_dev=makedev(8, 1), st_ino=174260, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=612, st_atime=2018/04/09-10:39:51.770078480, st_mtime=2018/04/03-11:22:55.059700095, st_ctime=2018/04/03-11:22:55.059700095}) = 0
7968  open("/var/www/html/index.nginx-debian.html", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = 10
7968  fstat64(10, {st_dev=makedev(8, 1), st_ino=174260, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=612, st_atime=2018/04/09-10:39:51.770078480, st_mtime=2018/04/03-11:22:55.059700095, st_ctime=2018/04/03-11:22:55.059700095}) = 0
7968  setsockopt(9, SOL_TCP, TCP_CORK, [1], 4) = 0
7968  writev(9, [{"HTTP/1.1 200 OK\r\nServer: nginx/1.10.3 (Ubuntu)\r\nDate: Mon, 09 Apr 2018 22:24:40 GMT\r\nContent-Type: text/html\r\nContent-Length: 612\r\nLast-Modified: Tue, 03 Apr 2018 18:22:55 GMT\r\nConnection: keep-alive\r\nETag: \"5ac3c67f-264\"\r\nAccept-Ranges: bytes\r\n\r\n", 247}], 1) = 247
7968  sendfile64(9, 10, [0] => [612], 612) = 612
7968  write(4, "127.0.0.1 - - [09/Apr/2018:15:24:40 -0700] \"GET / HTTP/1.1\" 200 612 \"-\" \"curl/7.47.0\"\n", 86) = 86
7968  close(10)                         = 0
7968  setsockopt(9, SOL_TCP, TCP_CORK, [0], 4) = 0
7968  recv(9, 0x813b858, 1024, 0)       = -1 EAGAIN (Resource temporarily unavailable)
7968  epoll_wait(3, [{EPOLLIN|EPOLLRDHUP, {u32=135551316, u64=13237172472938518868}}], 512, 65000) = 1
7968  write(1, "event list 0: ptr: 0x8145954\n", 29) = 29
7968  recv(9, "", 1024, 0)              = 0
7968  close(9)                          = 0
7968  epoll_wait(3, 0x8132608, 512, -1) = -1 EINTR (Interrupted system call)
7968  --- SIGTERM {si_signo=SIGTERM, si_code=SI_USER, si_pid=7987, si_uid=1000} ---
7968  sigreturn({mask=[]})              = -1 EINTR (Interrupted system call)
7968  unlink("/home/preston/nginx.pid") = 0
7968  epoll_ctl(3, EPOLL_CTL_DEL, 7, 0xbffff340) = 0
7968  close(7)                          = 0
7968  exit_group(0)                     = ?
7968  +++ exited with 0 +++
